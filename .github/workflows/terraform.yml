name: Terraform

on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Create env file
        run: |
          touch env
          echo MONGO_URL=${{ secrets.MONGO_URL }} >> env
          echo PORT=${{ secrets.PORT }} >> env
          exit 0

      - name: Build project
        uses: actions/setup-node@v3
        with:
          node-version: 14.x
          cache: 'npm'
      - run: npm ci
      - run: tsc

      - name: Build image to ECR
        uses: kciter/aws-ecr-action@v4
        with:
          secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          repo: ${{ secrets.AWS_ECR_REPO_NAME }}
          region: ${{ secrets.AWS_ECR_REPO_REGION }}
          create_repo: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.3
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform init
        id: init
        run: terraform init -input=false

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -var="key_name=ecs_triangles" -var="cluster_name=ecs_triangle_cluster"
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6.1.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve -var="key_name=ecs_triangles" -var="cluster_name=ecs_triangle_cluster"
